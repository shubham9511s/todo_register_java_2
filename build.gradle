plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

group = 'com.todo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'com.todo'
            artifactId = 'java-app'
            version = '0.0.1-SNAPSHOT'
            
            pom {
                name = 'Java App'
                description = 'A Spring Boot application'
                url = 'http://www.example.com'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'developerId'
                        name = 'Developer Name'
                        email = 'developer@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/com.todo/java-app.git'
                    developerConnection = 'scm:git:ssh://github.com:com.todo/java-app.git'
                    url = 'http://github.com/com.todo/java-app/'
                }

                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.runtimeClasspath.allDependencies.each { dep ->
                        if (dep.group && dep.name && dep.version) {
                            dependenciesNode.appendNode('dependency').with {
                                appendNode('groupId', dep.group)
                                appendNode('artifactId', dep.name)
                                appendNode('version', dep.version)
                                appendNode('scope', 'runtime')
                            }
                        }
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "nexus"
            url = uri("http://13.126.254.153:8081/repository/maven-releases/")
            credentials {
                username = project.findProperty("nexusUsername") ?: "admin"
                password = project.findProperty("nexusPassword") ?: "sai123"
            }
        }
    }
}
